@page "/home"
@inject HttpClient Http
@using System.Threading
@inject YamcsClient client
@using System.Text
<h1>Home</h1>
@if (stat == null)
{
    <p><em>Loading...</em></p>
    <div class="spinner"></div>
}
else
{
   
    <table class="table">
        <thead>
            <tr>
                <th>Packet</th>
                <th>Packet Time</th>
                <th>Received</th>
                <th>Packet Rate</th>
                <th>Data Rate</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var st in stat.Data.Tmstats)
            {
                <tr>
                    <td>@st.PacketName</td>
                    <td>
                        @st.LastPacketTime.ToString("yyyy-MM-dd HH:mm:ss.fff")
                    </td>
                    <td>@st.LastReceived.ToString("yyyy-MM-dd HH:mm:ss.fff")</td>
                    <td>@st.PacketRate</td>
                    <td>@st.DataRate</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WebSocketResponse<StatisticsResponse> stat;
    private string timestamp;
    string log = "";


    protected override async Task OnInitializedAsync()
    {
        client.webclient.Streams.MessageReceived.Subscribe(x =>
        {
            stat = x;
            _ = InvokeAsync(() => StateHasChanged());
        });
       // await client.CreateTMStatisticsSubscription("simulator", "realtime");
        await client.CreateTimeSubscription("simulator", "realtime");
        await client.CreateTMStatisticsSubscription("simulator", "realtime");

    }
}
